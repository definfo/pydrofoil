name: Publish test results

on:
  workflow_run:
    workflows: ["Pydrofoil"]
    types:
    - completed

permissions: {}

jobs:
  publish-test-results:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != 'skipped'
    permissions:
      checks: write
      # needed unless run with comment_mode: off
      pull-requests: write
      # required by download step to access artifacts API
      actions: read

    steps:
    - name: Download artifacts
      uses: actions/github-script@v7.0.1
      with:
        script: |
          var fs = require('fs');
          var artifacts = await github.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: ${{github.event.workflow_run.id }},
          });
          var matchArtifacts = artifacts.data.artifacts.filter((artifact) => {
            return artifact.name.startsWith('tests.xml') || artifact.name.startsWith('event.json')
          });
          var count = matchArtifacts.length;
          for (var i = 0; i < count; i++) {
            var matchArtifact = matchArtifacts[i];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var name = matchArtifact.name;
            var dest = name + '.zip'
            fs.writeFileSync('${{github.workspace}}/' + dest, Buffer.from(download.data));
            console.log("Downloaded", name, "as", dest);
          }
    - name: Extract test results and events
      run: for z in *.zip; do mkdir "${z%.*}" && cp "$z" "${z%.*}/tests.xml.zip" && cd "${z%.*}" && unzip "tests.xml.zip" && cd - ; done
    - name: ls
      run: ls -la **
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        commit: ${{ github.event.workflow_run.head_sha }}
        event_file: "event.json-ubuntu-20.04/event.json"
        event_name: ${{ github.event.workflow_run.event }}
        files: 
        junit_files: "**/pydrofoil-riscv-tests.xml"

